{
    "client": "Thunder Client",
    "collectionName": "exercise3-api",
    "dateExported": "2024-05-03T13:06:34.319Z",
    "version": "1.1",
    "folders": [
        {
            "_id": "ebfb9b8c-ac8f-4d7a-8567-0e3ab9cafcd5",
            "name": "Testing",
            "containerId": "",
            "created": "2024-05-03T12:19:21.120Z",
            "sortNum": 10000
        },
        {
            "_id": "f78f8198-f856-4fd5-8462-4196c162d1a8",
            "name": "Movie",
            "containerId": "",
            "created": "2024-05-03T12:19:21.121Z",
            "sortNum": 20000
        },
        {
            "_id": "3e553f37-4999-4759-b844-f00e0f5416cc",
            "name": "Genre",
            "containerId": "",
            "created": "2024-05-03T12:19:21.122Z",
            "sortNum": 30000
        }
    ],
    "requests": [
        {
            "_id": "dcb5ef1c-8a1d-4fa2-8b15-40d6aaa424f0",
            "colId": "66712048-6888-4324-9157-e4bb9fc5d760",
            "containerId": "ebfb9b8c-ac8f-4d7a-8567-0e3ab9cafcd5",
            "name": "/health",
            "url": "/health",
            "method": "GET",
            "sortNum": 10000,
            "created": "2024-05-03T12:19:21.120Z",
            "modified": "2024-05-03T12:19:21.120Z",
            "headers": [],
            "params": [],
            "tests": [],
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "tc.test(\"There is a linked environment called 'express-api-env\", () => {",
                            "    const {environmentName} = tc.info",
                            "    ",
                            "    expect(environmentName).to.be.ok;",
                            "    expect(environmentName).to.equal(\"express-api-env\");",
                            "});",
                            "",
                            "tc.test(\"The environment variable 'host' exists\", () => {",
                            "      expect(tc.getVar(\"host\")).to.be.ok",
                            "})",
                            "",
                            "tc.test(\"Ensure 'host' environment variable and collection settings set expected Base URL\", () => {",
                            "      const relativePath = tc.request.url.replace(tc.getVar(\"host\") + \"/api\", \"\")",
                            "      ",
                            "      expect(tc.getVar(\"host\")).to.equal(\"localhost:3000\");",
                            "    ",
                            "      expect(relativePath).to.equal(\"/health\");",
                            "})",
                            "",
                            "tc.test(\"Should respond with status 200\", () => {",
                            "      expect(tc.response.status).to.equal(200);",
                            "})",
                            "",
                            "tc.test(\"Should respond with relevant data in JSON: {success: true, data }\", () => {",
                            "      const responseBody = tc.response.json",
                            "    ",
                            "      expect(responseBody).to.be.an(\"object\");",
                            "      ",
                            "      expect(responseBody).to.have.property(\"success\");",
                            "      expect(responseBody).to.have.property(\"data\");",
                            "      ",
                            "      expect(responseBody.success).to.equal(true);",
                            "})"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "4415c04e-cfd7-4a26-837c-f78c8ae2d5df",
            "colId": "66712048-6888-4324-9157-e4bb9fc5d760",
            "containerId": "f78f8198-f856-4fd5-8462-4196c162d1a8",
            "name": "/movies",
            "url": "/movies",
            "method": "GET",
            "sortNum": 20000,
            "created": "2024-05-03T12:19:21.121Z",
            "modified": "2024-05-03T12:19:21.121Z",
            "headers": [],
            "params": [],
            "tests": [],
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "tc.test(\"Verify correct import of movie data\", () => {",
                            "  const movies = JSON.parse(tc.getVar('movies'))",
                            "",
                            "  expect(tc.response.status).to.not.equal(0);",
                            "  expect(tc.response.status).to.not.equal(500);",
                            "",
                            "  expect(tc.response.text).to.not.contain(\"movies is not defined\");",
                            " ",
                            "  expect(tc.response.json).to.deep.equal(movies);",
                            "",
                            "});",
                            ""
                        ]
                    }
                ]
            }
        },
        {
            "_id": "cc69fd4c-e661-4afc-a0cf-f2fa71978c2e",
            "colId": "66712048-6888-4324-9157-e4bb9fc5d760",
            "containerId": "3e553f37-4999-4759-b844-f00e0f5416cc",
            "name": "/genres",
            "url": "/genres",
            "method": "GET",
            "sortNum": 20000,
            "created": "2024-05-03T12:19:21.122Z",
            "modified": "2024-05-03T12:19:21.122Z",
            "headers": [],
            "params": [],
            "tests": [],
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "tc.test(\"Verify correct import of genre data\", () => {",
                            "  const genres = JSON.parse(tc.getVar('genres'))",
                            "  ",
                            "  expect(tc.response.status).to.not.equal(0);",
                            "  expect(tc.response.status).to.not.equal(500);",
                            "  ",
                            "  expect(tc.response.text).to.not.contain(\"genres is not defined\");",
                            " ",
                            "  expect(tc.response.json).to.deep.equal(genres);",
                            "});",
                            ""
                        ]
                    }
                ]
            }
        },
        {
            "_id": "a554c7ee-5f6c-4702-abb4-f52311c5c2ce",
            "colId": "66712048-6888-4324-9157-e4bb9fc5d760",
            "containerId": "3e553f37-4999-4759-b844-f00e0f5416cc",
            "name": "/genres/:id",
            "url": "/genres/802cbb0e-bf47-49a6-beca-6f22f0d50f88",
            "method": "PUT",
            "sortNum": 30000,
            "created": "2024-05-03T12:19:37.710Z",
            "modified": "2024-05-03T12:45:05.669Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"name\": \"Science Fiction\"\n}",
                "form": []
            },
            "tests": [],
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "tc.test(\"Verify request body is parsed as JSON\", () => {",
                            "  expect(tc.response.json).to.have.property('name')",
                            "})"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "9788aff5-eb39-4619-bf06-1bfee40fb50c",
            "colId": "66712048-6888-4324-9157-e4bb9fc5d760",
            "containerId": "3e553f37-4999-4759-b844-f00e0f5416cc",
            "name": "/genres/:id",
            "url": "/genres/f5d5e8a2-c1ab-44e7-936d-d6e7bcfbf313",
            "method": "DELETE",
            "sortNum": 40000,
            "created": "2024-05-03T12:19:39.673Z",
            "modified": "2024-05-03T13:06:08.540Z",
            "headers": [],
            "params": [],
            "tests": []
        }
    ],
    "settings": {
        "options": {
            "baseUrl": "{{host}}/api"
        },
        "postReq": {
            "inlineScripts": [
                {
                    "script": [
                        "const movies = [",
                        "\t{",
                        "\t\tid: 'c1758fd3-82c2-4c35-b4e7-b9e78b37a0c2',",
                        "\t\ttitle: 'The Secret Garden',",
                        "\t\tyear: 2020,",
                        "\t\tgenreId: 'a5c3e8b1-8502-4e7e-891b-d30a756a8ad4',",
                        "\t\tdirector: 'Marc Munden',",
                        "\t},",
                        "\t{",
                        "\t\tid: '7a93ab49-8600-4a70-a04b-28f3cc459fe0',",
                        "\t\ttitle: \"Harry Potter and the Philosopher's Stone\",",
                        "\t\tyear: 2001,",
                        "\t\tgenreId: 'a5c3e8b1-8502-4e7e-891b-d30a756a8ad4',",
                        "\t\tdirector: 'Chris Columbus',",
                        "\t},",
                        "\t{",
                        "\t\tid: '82e85b7f-ae47-4c0c-9732-28b2f689c0b0',",
                        "\t\ttitle: 'Inception',",
                        "\t\tyear: 2010,",
                        "\t\tgenreId: '802cbb0e-bf47-49a6-beca-6f22f0d50f88',",
                        "\t\tdirector: 'Christopher Nolan',",
                        "\t},",
                        "\t{",
                        "\t\tid: '2a39fb4e-26fb-41a3-b7a5-d307e944ec48',",
                        "\t\ttitle: 'The Shawshank Redemption',",
                        "\t\tyear: 1994,",
                        "\t\tgenreId: 'f5d5e8a2-c1ab-44e7-936d-d6e7bcfbf313',",
                        "\t\tdirector: 'Frank Darabont',",
                        "\t},",
                        "]",
                        "",
                        "const genres = [",
                        "\t{",
                        "\t\tid: 'a5c3e8b1-8502-4e7e-891b-d30a756a8ad4',",
                        "\t\tname: 'Fantasy',",
                        "\t},",
                        "\t{",
                        "\t\tid: '802cbb0e-bf47-49a6-beca-6f22f0d50f88',",
                        "\t\tname: 'Sci-Fi',",
                        "\t},",
                        "\t{",
                        "\t\tid: 'f5d5e8a2-c1ab-44e7-936d-d6e7bcfbf313',",
                        "\t\tname: 'Drama',",
                        "\t},",
                        "]",
                        "",
                        "tc.setVar('movies', movies, 'request')",
                        "tc.setVar('genres', genres, 'request')",
                        "",
                        "tc.test(\"Verify server is running\", () => {",
                        "    expect(tc.response.status).to.not.equal(0);",
                        "});",
                        ""
                    ]
                }
            ]
        },
        "envId": "74ac5446-d3e1-4d4a-822e-2d38bbea1b91"
    }
}